@page "/workflows/recurrences"
@using SecOpsSteward.UI.Pages.Workflows.Dialogs

<PageSections>
    <HelpDrawer>
        <MudText Typo="Typo.h6">Recurring Workflows</MudText>
        <MudText Typo="Typo.body2" Class="mb-4">
            This page lists and allows creation of recurring <b>Workflows</b>. This means the SecOps Steward Coordinator will automatically
            queue a <b>Workflow</b> for execution when the recurrence criteria you specify is met.
        </MudText>

        <MudText Typo="Typo.body2" Class="mb-4">
            Recurrences are generally based on repeated intervals of time and can be subject to manual approval by a required number of certain
            users, specified during its configuration.
        </MudText>

        <IconHelp Color="@Color.Primary" Icon="@Icons.Material.Filled.Repeat"
                  Header="Create Recurrence">
            If a Workflow is locked, you can click this button to create a recurrence for it.
        </IconHelp>
    </HelpDrawer>
</PageSections>

<MudContainer MaxWidth="MaxWidth.Large">
    <MudGrid>
        <MudItem md="12">
            @if (DbContext.Workflows.ToList().Any(wf => wf.IsLocked))
            {
                <MudPaper Elevation="2" Class="p-0">
                    <MudTable @ref="_table" Items="@WorkflowRecurrences" Hover="true" Striped="true">
                        <ToolBarContent>
                            <MudText Typo="Typo.h6">Recurring Workflows</MudText>
                            <MudSpacer/>
                            <MudButton Color="Color.Primary" StartIcon="@Icons.Material.Filled.Repeat" OnClick="@CreateRecurrence" Class="mr-2 my-1">Create Recurrence</MudButton>
                        </ToolBarContent>
                        <HeaderContent>
                            <MudTh></MudTh>
                            <MudTh>
                                <MudTableSortLabel SortBy="new Func<WorkflowRecurrenceModel, object>(x => x.WorkflowId)">Workflow ID</MudTableSortLabel>
                            </MudTh>
                            <MudTh>
                                <MudTableSortLabel SortBy="new Func<WorkflowRecurrenceModel, object>(x => x.Workflow.Name)">Name</MudTableSortLabel>
                            </MudTh>
                            <MudTh>
                                <MudTableSortLabel InitialDirection="SortDirection.Descending" SortBy="new Func<WorkflowRecurrenceModel, object>(x => x.FirstRun)">First Run</MudTableSortLabel>
                            </MudTh>
                            <MudTh>
                                <MudTableSortLabel SortBy="new Func<WorkflowRecurrenceModel, object>(x => x.TimeBetweenRuns)">Interval</MudTableSortLabel>
                            </MudTh>
                            <MudTh>
                                <MudTableSortLabel SortBy="new Func<WorkflowRecurrenceModel, object>(x => x.ApproversString)">Approvers</MudTableSortLabel>
                            </MudTh>
                        </HeaderContent>
                        <RowTemplate>
                            <MudTd>
                                <MudIconButton Color="@Color.Warning" Icon="@Icons.Material.Filled.Delete" Title="Delete" OnClick="@(() => DeleteRecurrence(context))"/>
                            </MudTd>
                            <MudTd DataLabel="Workflow ID">@context.WorkflowId.ShortId()</MudTd>
                            <MudTd DataLabel="Name">@context.Workflow.Name</MudTd>
                            <MudTd DataLabel="First Run">@context.FirstRun</MudTd>
                            <MudTd DataLabel="Interval">@context.TimeBetweenRuns</MudTd>
                            <MudTd DataLabel="Approvers">@context.ApproversString</MudTd>
                        </RowTemplate>
                        <PagerContent>
                            <MudTablePager PageSizeOptions="new[] {10, 25, 50, 100}"/>
                        </PagerContent>
                    </MudTable>
                </MudPaper>
            }
            else
            {
                <ErrorText Title="No Locked Workflows">
                    You can only create recurrences on Workflows which have been locked. To lock a Workflow, go to the
                    <MudLink Href="/workflows/list">Workflow List</MudLink>.
                </ErrorText>
            }
        </MudItem>
    </MudGrid>
</MudContainer>

@code
{
    private MudTable<WorkflowRecurrenceModel> _table;

    protected List<WorkflowRecurrenceModel> WorkflowRecurrences { get; set; } = new();

    protected override Task OnInitializedAsync()
    {
        return Refresh();
    }

    protected async Task Refresh()
    {
        WorkflowRecurrences = await DbContext.WorkflowRecurrences.ToListAsync();
    }

    protected async Task CreateRecurrence()
    {
        var dlg = DialogService.Show<NewRecurrenceDialog>("Create Recurrence");
        var result = await dlg.Result;
        var model = result.Data as WorkflowRecurrenceModel;
        if (model != null)
        {
            DbContext.WorkflowRecurrences.Add(model);
            await DbContext.SaveChangesAsync();

            await Refresh();
        }
    }

    protected async Task DeleteRecurrence(WorkflowRecurrenceModel model)
    {
        var result = await DialogService.ShowMessageBox("Delete Workflow Recurrence", "Do you want to delete this workflow recurrence?", "Yes", "No");
        if (result.GetValueOrDefault(false))
        {
            DbContext.WorkflowRecurrences.Remove(model);
            await DbContext.SaveChangesAsync();
            WorkflowRecurrences.Remove(model);
        }
    }
}